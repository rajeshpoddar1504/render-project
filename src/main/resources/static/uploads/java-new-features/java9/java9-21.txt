from Telusko 
-----------------------------------------------------------------------------------------------------------------------------------------------------
switch expression
var
sealed classes
record class
text block
string template
=========================================================================

Switch Expression
-------------------
String day=""Mon;
String time="";

time=switch(day){

	case "Sat","Sun"-> "6am";
	case "Wed" -> "8am";
	default -> "7am";
};


time=switch(day){

	case "Sat","Sun" : yield "6am";
	case "Wed" : yield "8am";
	default : yield "7am";
};

=========================================================================
var -> java 10
---------

//var a= "rajesh";
    // var b= 10; // This will not compile because 'var' cannot be used at class level.
    // 'var' can only be used for local variables, not for class fields.
    public static void main(String[] args) {
       // var num1=null;
        //null cannot be assigned to a variable declared with 'var'
        // because 'var' requires an initializer that can infer a type.
        var num= "rajesh";

    }

==================================================================

text block -> java 15
-----------------------------

String htmlData =""" 
<html>
<body>


</body>
</html>
""";

no need to place \n to print in different lines
===========================================================
String template -> removed in java 23
-------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------------
from in 28 minutes
-----------------------------------------------------------------------------------------------------------------------------------------------------

java versioning
================
jdk 1.0 	January 1996
j2se 5.0 	Sept 2004 	5 releases in 8 years
java se 8 (lts) March 2014 	most important Java Release
java se 9 	Sept 2017	4 Releases in 13 years
java se 10	March 2018	Time-Based Release Versioning
java se11 (lts)	Sept 2018 	Long Terms Support version (Every 3 years)
java se12	March 2019	
Java se16	March 2021


java 5 -> enhanced for loop,generics,enus,autoboxing
java 8-> functional programming - lambda, stream, static methods in interface
java 9 -> modularization (java platform module system)
java 10-> Local variable type inference (var)
java 14 -> Switch expression (preview in 12 and 13)
java 15 -> Text blocks (preview in 13)
java 16 -> record classes (preview in 14 and 15)

all java versions -> API improvements, performance and Garbage collection improvements
-----------------------------------------------------------------
java 9,10
---------

List<String> list= List.of("rajesh", "poddar");	-> creates immutable list
list.add("kumar"); -> throws UnsupportedOperationException

					-> java 9
List.copyOf -> creates non modifiable list	-> java 10

similaraly for set and map


// List<String> list= List.of("rajesh", "poddar");
        //List<String> list= Arrays.asList("rajesh", "poddar");
       // list.add("kumar"); //thows Exception
        List<String > lists=new ArrayList<>();
        lists.add("rajesh");
        lists.add("poddar");
        System.out.println(lists);
        List<String > copyList=List.copyOf(lists); 
        copyList.add("kumar"); // throws exception

-----------------------------------------------------------------------
java 11
-------
//  System.out.println(Paths.get("resources/sample.txt").toAbsolutePath());
        String fileContent=  Files.readString(Paths.get("resources/sample.txt"));
        System.out.println(fileContent);
        Files.writeString(Paths.get("resources/new-sample.txt"),fileContent);


---------------------------------------------------------------------------
java 11
--------
Predicate.not


Predicate<Integer> p= e->e%2==0;
        var list= List.of(2,6,3,8,9,4,5);
        System.out.println(list.stream().filter(p.negate()).toList());

list.stream().filter(Predicate.not(PredicateNotClass::isEven)).forEach(System.out::println);


---------------------------------------------------------------------------
java 11
--------
String utility methods

.isBlank() -> checks if string is either blank or only contains whitespace
.strip() -> removes whitespace from left or right
.stripLeading() -> removes white space from left
.stripTrailing() -> removes whitespace from right
.lines()-> returns a stream of lines extracted from this string separated by line terminators
.transform(s->s.substring(2));
"my name is %s and age is %d".formatted("rajesh",3);
-------------------------------------------------------------------
java 10
-------
Local variable type inference
java compiler infers the type of variable at compile time
final can also be created
null cant be assigned to var
var is not a keyword

var list=List.of("rajesh","poddar");

----------------------------------------------------------------------

java 14
----------

switch expression

if used using lambda expression it doesn't fall to other cases once true case is found.
use yield to return the value (cant use return keyword)

------------------------------------------------------------------------
java 15
--------
text blocks

String textBlock="""
	start from 
	here 
	"double quotation"
	can be
	used""";

after 3 quotes new line must be started from next line.
format is retained
trailing white space is stripped
we can use text blocks where ever we can use string 

---------------------------------------------------------------------
java 16
-------
records

compact constructor can be used

