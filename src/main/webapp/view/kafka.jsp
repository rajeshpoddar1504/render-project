<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="font-size:13px;color:#212529;">Introduction</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Apache Kafka is an open-source stream-processing software platform.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">It works as a broker between two parties, i.e., a sender and a receiver.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">It is a publish-subscribe messaging system which let exchanging of data between applications, servers, and processors as well.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">In Apache Kafka, a sender is known as a producer who publishes messages, and a receiver is known as a consumer who consumes that message by subscribing it.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">As soon as the streams of records occur, it processes it.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">It works similar to an enterprise messaging system where it publishes and subscribes streams of records.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">It stores the streams of records in a fault-tolerant durable way.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="font-size:13px;color:#212529;">core API of kafka:</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Producer API</span></strong><span style="color:#212529;">: This API allows/permits an application to publish streams of records to one or more topics.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Consumer API</span></strong><span style="color:#212529;">: This API allows an application to subscribe one or more topics and process the stream of records produced to them.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Streams API:</span></strong><span style="color:#212529;">&nbsp;This API allows an application to effectively transform the input streams to the output streams. It permits an application to act as a stream processor which consumes an input stream from one or more topics and produce an output stream to one or more output topics.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Connector API</span></strong><span style="color:#212529;">: This API executes the reusable producer and consumer APIs with the existing data systems or applications.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Apache Kafka is capable of handling millions of data or messages per second.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Organizations such as NETFLIX, UBER, Walmart, etc. and over thousands of such firms make use of Apache Kafka.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Apache Kafka is able to maintain the fault-tolerance. Fault-tolerance means that sometimes a consumer successfully consumes the message that was delivered by the producer. But, the consumer fails to process the message back due to backend database failure, or due to presence of a bug in the consumer code. In such a situation, the consumer is unable to consume the message again. Consequently, Apache Kafka has resolved the problem by reprocessing the data.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Apache Kafka is having extremely high performance, i.e., it has really low latency value less than 10ms which proves it as a well-versed software.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="font-size:12px;color:#212529;">Kafka Topics</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A category or a common name used to store and publish a particular stream of data.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">topics in Kafka are similar to tables in the database, but not containing all constraints.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">We can create n number of topics as we want.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A producer publishes data to the topics, and a consumer reads that data from the topic by subscribing it.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="font-size:12px;color:#212529;">Partitions</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A topic is split into several parts which are known as the partitions of the topic.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">The data content gets stored in the partitions within the topic.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">While creating a topic, we need to specify the number of partitions (the number is arbitrary and can be changed later)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Each message gets stored into partitions with an incremental id known as its Offset value.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">The order of the offset value is guaranteed within the partition only and not across the partition. The offsets for a partition are infinite.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Note: The data once written to a partition can never be changed. It is immutable. The offset value always remains in an incremental state, it never goes back to an empty space. Also, the data is kept in a partition for a limited time only.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Suppose a topic containing three partitions 0,1 and 2. Each partition has different offset numbers. The data is distributed among each offset in each partition where data in offset 1 of Partition 0 does not have any relation with the data in offset 1 of Partition1. But data in offset 1of Partition 0 is inter-related with the data contained in offset 2 of Partition0.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="font-size:12px;color:#212529;">OFFSET</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Topics are split into Partitions. So, when you create a Kafka Topic we will have to specify how many Partitions we want for the Kafka topics. Each partition is going to be a stream of data as well and each Partition will have the data in it being ordered and each message within a Partition will get an incremental ID which is the position of the message in the Partition and that specific ID is called an Offset.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="font-size:12px;color:#212529;">BROKERS</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A Kafka cluster is comprised of one or more servers which are known as brokers or Kafka brokers.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A broker is a container that holds several topics with their multiple partitions.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Kafka brokers are also known as Bootstrap brokers because connection with any one broker means connection with the entire cluster.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">a broker does not contain whole data, but each broker in the cluster knows about all other brokers, partitions as well as topics.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Each broker is holding a topic, namely Topic-x with three partitions 0,1 and 2</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Remember, all partitions do not belong to one broker only, it is always distributed among each broker no relationship ever exists between the broker number and the partition number.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="font-size:12px;color:#212529;">Kafka Topic Replication</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Apache Kafka is a distributed software system in the Big Data world.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Thus, for such a system, there is a requirement to have copies of the stored data.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Apache Kafka enables a feature of replication to secure data loss even when a broker fails down.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">To do so, a replication factor is created for the topics contained in any particular broker.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Replication Factor</span></strong><span style="color:#212529;">: A replication factor is the number of copies of data over multiple brokers.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">This helps to store a replica of the data in another broker from where the user can access it.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">While serving request and avoid confusion</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">------------------------------------------</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">* Kafka chooses one of the broker&apos;s partitions as a leader, and the rest of them becomes its followers.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">* The followers(brokers) will be allowed to synchronize the data. But, in the presence of a leader, none of the followers is allowed to serve the client&apos;s request.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">* These replicas are known as ISR (in-sync-replica). So, Apache Kafka offers multiple ISR (in-sync-replica) for the data.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">* Therefore, only the leader is allowed to serve the client request. The leader handles all the read and writes operations of data for the partitions. The leader and its followers are determined by the zookeeper.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">* If the broker holding the leader for the partition fails to serve the data due to any failure, one of its respective ISR replicas will take over the leadership. Afterward, if the previous leader returns, it tries to acquire its leadership again.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="font-size:12px;color:#212529;">Kafka Producers</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A producer is the one which publishes or writes data to the topics within different partitions. Producers automatically know that, what data should be written to which partition and broker. The user does not require to specify the broker and the partition.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Q 1) &nbsp;How does the producer write data to the cluster?</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A producer uses following strategie//s to write data to the cluster:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Message Keys</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Acknowledgment</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Message Keys</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Apache Kafka enables the concept of the key to send the messages in a specific order.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">The key enables the producer with two choices, i.e., either to send data to each partition (automatically) or send data to a specific partition only.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Sending data to some specific partitions is possible with the message keys. If the producers apply key over the data, that data will always be sent to the same partition always.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">But, if the producer does not apply the key while writing the data, it will be sent in a round-robin manner. This process is called load balancing.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">a message key can be a string, number, or anything as we wish.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Acknowledgment</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">It means the producer can get a confirmation of its data writes by receiving the following acknowledgments:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">acks=0 (No acknowledgment): This means that the producer sends the data to the broker but does not wait for the acknowledgement. More data loss possiblility</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">acks=1 (Leader acknowledgment): This means that the producer will wait for the leader broker of the topic partition acknowledgement. The leader asks the broker whether it successfully received the data, and then returns feedback to the producer. In such case, there is limited data loss only.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">acks=all (Replica acknowledgment): Here, the acknowledgment is done by both the leader and its followers. When they successfully acknowledge the data, it means the data is successfully received. In this case, there is no data loss.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">If the producer doesn&rsquo;t receive the acknowledgment within a specified timeout or encounters an error, it can retry the message transmission according to its configured retry settings.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Kafka: Consumer and Consumer Groups</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A consumer is the one that consumes or reads data from the Kafka cluster via a topic.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A consumer also knows that from which broker, it should read the data.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">The consumer reads the data within each partition in an orderly manner.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Also, a consumer can easily read data from multiple brokers at the same time (if data is not related)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Consumer Group:&nbsp;</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A consumer group is a group of consumers that share the same group id.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Each consumer present in a group reads data directly from the exclusive partitions.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">In case, the number of consumers are more than the number of partitions, some of the consumers will be in an inactive state.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Somehow, if we lose any active consumer within the group then the inactive one can takeover and will come in an active state to read the data.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Group Coordinator&nbsp;</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">consumers within a group automatically use a &apos;GroupCoordinator&apos; and one &apos;ConsumerCoordinator&apos;, which assigns a consumer to a partition. This feature is already implemented in the Kafka.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Consumer Offsets</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Kafka brokers use an internal topic named __consumer_offsets that keeps track of what messages a given consumer group last successfully processed.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Each message in a Kafka topic has a partition ID and an offset ID attached to it.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">in order to &quot;checkpoint&quot; how far a consumer has been reading into a topic partition, the consumer will regularly commit the latest processed message, also known as consumer offset.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">The process of committing offsets is not done for every message consumed (because this would be inefficient), and instead is a periodic process.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Offsets are critical for many applications. If a Kafka client crashes, a rebalance occurs and the latest committed offset help the remaining Kafka consumers know where to restart reading and processing messages.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">another consumer group rebalance happens and consumer offsets are yet again leveraged to notify consumers where to start reading data from.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Delivery semantics</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">The choice of commitment depends on the consumer, i.e., when the consumer wishes to commit the offsets.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">At most once: Here, the offsets are committed as soon as the consumer receives the message. But in case of incorrect processing, the message will be lost, and the consumer will not be able to read further. Least preferred one.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">At least once: Here, the offsets are committed after the message has been processed. If the processing goes wrong, then the message will be read again by the consumer. preffered</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Because a consumer can read the message twice, it results in duplicate processing of the messages. Thus, it needs a system to be an idempotent system.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Exactly Once: Here, the offsets can be achieved for Kafka-to-Kafka workflow only using the Kafka Streams API. For achieving offset for Kafka to the external system, we need to use an idempotent consumer.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Kafka Cluster</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A Kafka cluster is a system that comprises of different brokers, topics, and their respective partitions. Data is written to the topic within the cluster and read by the cluster itself.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Zookeeper</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A Zookeeper is used to store information about the Kafka cluster and details of the consumer clients. It manages brokers by maintaining a list of them. Also, a ZooKeeper is responsible for choosing a leader for the partitions.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">If any changes like a broker die, new topics, etc., occurs, the ZooKeeper sends notifications to Apache Kafka.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Zookeeper has a leader server that handles all the writes, and rest of the servers are the followers who handle all the reads.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">However, a user does not directly interact with the Zookeeper, but via brokers.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">No Kafka server can run without a zookeeper server. It is mandatory to run the zookeeper server.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><u><span style="font-size:13px;color:#212529;">Kafka Using Springboot</span></u></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;"><a href="https://reflectoring.io/spring-boot-kafka/"><span style="font-size:13px;color:blue;">https://reflectoring.io/spring-boot-kafka/</span></a></span><u><span style="font-size:13px;color:#212529;">&nbsp;</span></u></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<ul type="disc" style="margin-bottom:0cm;">
    <li style='margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";color:#212529;background:white;'><span style='font-size:11px;font-family:"Segoe UI","sans-serif";'>Start the kafka server.</span></li>
    <li style='margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";color:#212529;background:white;'><span style='font-size:11px;font-family:"Segoe UI","sans-serif";'>Add dependency in pom.xml</span></li>
</ul>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&lt;dependency&gt;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp;&lt;groupId&gt;org.springframework.kafka&lt;/groupId&gt;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp;&lt;artifactId&gt;spring-kafka&lt;/artifactId&gt;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &lt;version&gt;2.5.2.RELEASE&lt;/version&gt;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&lt;/dependency&gt;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<ul style="margin-bottom:0cm;margin-top:0cm;" type="disc">
    <li style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";color:#212529;background:white;'>Configure the Producer</li>
</ul>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Configuration</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>class KafkaProducerConfig {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp;@Value(&quot;${io.reflectoring.kafka.bootstrap-servers}&quot;)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; private String bootstrapServers;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public Map&lt;String, Object&gt; producerConfigs() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp;props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; bootstrapServers);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp;props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; StringSerializer.class);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp;props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; StringSerializer.class);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; return props;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public ProducerFactory&lt;String, String&gt; producerFactory() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; return new DefaultKafkaProducerFactory&lt;&gt;(producerConfigs());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public KafkaTemplate&lt;String, String&gt; kafkaTemplate() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; return new KafkaTemplate&lt;&gt;(producerFactory());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<ul style="margin-bottom:0cm;margin-top:0cm;" type="disc">
    <li style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";color:#212529;background:white;'>Configure the Consumer</li>
</ul>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Configuration</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>class KafkaConsumerConfig {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp;@Value(&quot;${io.reflectoring.kafka.bootstrap-servers}&quot;)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; private String bootstrapServers;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public Map&lt;String, Object&gt; consumerConfigs() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp;props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; bootstrapServers);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp;props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; StringDeserializer.class);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; return props;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public ConsumerFactory&lt;String, String&gt; consumerFactory() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; return new DefaultKafkaConsumerFactory&lt;&gt;(consumerConfigs());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public KafkaListenerContainerFactory&lt;ConcurrentMessageListenerContainer&lt;String, String&gt;&gt; kafkaListenerContainerFactory() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp;ConcurrentKafkaListenerContainerFactory&lt;String, String&gt; factory =</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; new ConcurrentKafkaListenerContainerFactory&lt;&gt;();</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp;factory.setConsumerFactory(consumerFactory());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; return factory;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<ul style="margin-bottom:0cm;margin-top:0cm;" type="disc">
    <li style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";color:#212529;background:white;'>Add in application.properties file<br>&nbsp;&nbsp;</li>
</ul>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>spring.kafka.bootstrap-servers=localhost:9092</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>spring.kafka.consumer.group-id=myGroup</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<ul style="margin-bottom:0cm;margin-top:0cm;" type="disc">
    <li style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";color:#212529;background:white;'>Create topics:</li>
</ul>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Configuration</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>class KafkaTopicConfig {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public NewTopic topic1() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; return TopicBuilder.name(&quot;reflectoring-1&quot;).build();</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public NewTopic topic2() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; return TopicBuilder.name(&quot;reflectoring-2&quot;).build();</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; ...</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A KafkaAdmin bean is responsible for creating new topics in our broker. With Spring Boot, a</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">KafkaAdmin bean is automatically registered.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A non SpringBoot application we have to manually register KafkaAdmin bean:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>KafkaAdmin admin() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; Map&lt;String, Object&gt; configs = new HashMap&lt;&gt;();</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; configs.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, ...);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; return new KafkaAdmin(configs);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">To create a topic, we register a NewTopic bean for each topic to the application context.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<ul style="margin-bottom:0cm;margin-top:0cm;" type="disc">
    <li style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";color:#212529;background:white;'>Sending Messages:</li>
</ul>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Using KafkaTemplate</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Component</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>class KafkaSenderExample {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Autowired</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;private KafkaTemplate&lt;String, String&gt; kafkaTemplate;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; void sendMessage(String message, String topicName) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; kafkaTemplate.send(topicName, message);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><u><span style="color:#212529;">configure an async callback</span></u><span style="color:#212529;">:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>void sendMessageWithCallback(String message) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; ListenableFuture&lt;SendResult&lt;String, String&gt;&gt; future =&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; kafkaTemplate.send(topic1, message);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; future.addCallback(new ListenableFutureCallback&lt;SendResult&lt;String, String&gt;&gt;() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; @Override</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; public void onSuccess(SendResult&lt;String, String&gt; result) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; LOG.info(&quot;Message [{}] delivered with offset {}&quot;,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; message,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result.getRecordMetadata().offset());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; @Override</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; public void onFailure(Throwable ex) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; LOG.warn(&quot;Unable to deliver message [{}]. {}&quot;,&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; message,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ex.getMessage());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; });</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><u><span style="color:#212529;">We can also register a ProducerListener</span></u></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; KafkaTemplate&lt;String, String&gt; kafkaTemplate() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; KafkaTemplate&lt;String, String&gt; kafkaTemplate =&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; new KafkaTemplate&lt;&gt;(producerFactory());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; ...</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; kafkaTemplate.setProducerListener(new ProducerListener&lt;String, String&gt;() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; @Override</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; public void onSuccess(</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; ProducerRecord&lt;String, String&gt; producerRecord,&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; RecordMetadata recordMetadata) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp;&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; LOG.info(&quot;ACK from ProducerListener message: {} offset: &nbsp;{}&quot;,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; producerRecord.value(),</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; recordMetadata.offset());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; });</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; return kafkaTemplate;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">onSuccess() and onError() methods</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Using RoutingKafkaTemplate</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">&nbsp;</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">We can use RoutingKafkaTemplate when we have multiple producers with different configurations and we want to select producer at runtime based on the topic name</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<ul style="margin-bottom:0cm;margin-top:0cm;" type="disc">
    <li style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";color:#212529;background:white;'>Consume Message</li>
</ul>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Two <em><u>MessageListenerContainer</u></em> implementations are provided:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">KafkaMessageListenerContainer</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">ConcurrentMessageListenerContainer</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">The KafkaMessageListenerContainer receives all message from all topics or partitions on a single thread. The ConcurrentMessageListenerContainer delegates to one or more KafkaMessageListenerContainer instances to provide multi-threaded consumption.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A <em><u>KafkaMessageListenerContainer</u></em> receives all messages from all topics on a single thread.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">A <em><u>ConcurrentMessageListenerContainer</u></em> assigns these messages to multiple <em><u>KafkaMessageListenerContainer</u></em> instances to provide multi-threaded capability.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Using @KafkaListener at Method Level</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">&nbsp;</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Component</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>class KafkaListenersExample {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; Logger LOG = LoggerFactory.getLogger(KafkaListenersExample.class);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @KafkaListener(topics = &quot;reflectoring-1&quot;)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; void listener(String data) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; LOG.info(data);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @KafkaListener(</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; topics = &quot;reflectoring-1, reflectoring-2&quot;,&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; groupId = &quot;reflectoring-group-2&quot;)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; void commonListenerForMultipleTopics(String message) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; LOG.info(&quot;MultipleTopicListener - {}&quot;, message);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">To use this annotation, we should add the @EnableKafka annotation on one of our @Configuration classes. Also, it requires a listener container factory, which we have configured in KafkaConsumerConfig.java</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Using @KafkaListener will make this bean method a listener and wrap the bean in MessagingMessageListenerAdapter</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Using @KafkaListener at Class Level</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">&nbsp;</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">To do this we need to specify @KafkaHandler at the method level:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Component</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@KafkaListener(id = &quot;class-level&quot;, topics = &quot;reflectoring-3&quot;)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>class KafkaClassListener {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; ...</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @KafkaHandler</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; void listen(String message) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; LOG.info(&quot;KafkaHandler[String] {}&quot;, message);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; @KafkaHandler(isDefault = true)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; void listenDefault(Object object) {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; LOG.info(&quot;KafkaHandler[Default] {}&quot;, object);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">When the listener receives messages, it converts them into the target types and tries to match that type against the method signatures to find out which method to call.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Consuming Messages from a Specific Partition with an Initial Offset</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">We can configure listeners to listen to multiple topics, partitions, and a specific initial offset.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">For example, if we want to receive all the messages sent to a topic from the time of its creation on application startup we can set the initial offset to zero:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@KafkaListener( &nbsp; groupId = &quot;reflectoring-group-3&quot;, topicPartitions = @TopicPartition(</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; topic = &quot;reflectoring-1&quot;, partitionOffsets = { @PartitionOffset(</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; &nbsp; partition = &quot;0&quot;, &nbsp; &nbsp; &nbsp; &nbsp; initialOffset = &quot;0&quot;) }))</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; void listenToPartitionWithOffset( &nbsp; &nbsp;@Payload String message, &nbsp; &nbsp;@Header(KafkaHeaders.RECEIVED_PARTITION_ID) int partition, &nbsp; &nbsp; @Header(KafkaHeaders.OFFSET) int offset) { &nbsp; &nbsp;&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:.0001pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";text-indent:36.0pt;background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp;LOG.info(&quot;Received message [{}] from partition-{} with offset-{}&quot;, message, &nbsp; partition, &nbsp; &nbsp; &nbsp; &nbsp; offset);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:36.0pt;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Since we have specified initialOffset = &quot;0&quot;, we will receive all the messages starting from offset 0 every time we restart the application.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Filtering Messages</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">concurrentKafkaListenerContainerFactory.setRecordFilterStrategy(record -&gt; record.value().contains(&quot;ignored&quot;));</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Spring wraps the listener with a FilteringMessageListenerAdapter.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Messages that match the filter will be discarded before reaching the listener.</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">&nbsp;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><strong><span style="color:#212529;">Sending/Receiving Custom messages:</span></strong></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">Configuring JSON Serializer &amp; Deserializer</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">For producer:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>public ProducerFactory&lt;String, User&gt; userProducerFactory() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&hellip;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>configProps.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, JsonSerializer.class);</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>public KafkaTemplate&lt;String, User&gt; userKafkaTemplate() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp;return new KafkaTemplate&lt;&gt;(userProducerFactory());</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; }</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style="color:#212529;">For consumer:</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>public ConsumerFactory&lt;String, User&gt; userConsumerFactory() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&hellip;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>return new DefaultKafkaConsumerFactory&lt;&gt;( props,</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; new StringDeserializer(),</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; &nbsp; &nbsp; new JsonDeserializer&lt;&gt; (User.class));</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>@Bean</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&nbsp; public ConcurrentKafkaListenerContainerFactory&lt;String, User&gt; userKafkaListenerContainerFactory() {</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&hellip;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>&hellip;</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:8.0pt;margin-left:0cm;line-height:normal;font-size:15px;font-family:"Calibri","sans-serif";background:white;'><span style='font-family:"Candara Light","sans-serif";color:#212529;'>}</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:115%;font-size:15px;font-family:"Calibri","sans-serif";'>&nbsp;</p>
</body>
</html>